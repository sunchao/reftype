%%% Methods
%%% nat => methty
%%% $Id$


%%% method type

methty : type.		%name methty MT.

methty/base : ty -> shared-efx -> methty.

methty/arg : ty -> set -> set -> methty -> methty.


eq : methty -> methty -> type.

eq/ : eq MT MT.


%{%
#define EQ eq
BEGIN_ELF
#include "EQ.i"
END_ELF
#undef EQ
%}%

%{%
#define data methty
BEGIN_ELF
%abbrev methty`eq = eq.
%abbrev methty`eq/ = eq/.
%abbrev methty`meta-eq = meta-eq.
%abbrev methty`false-implies-eq = false-implies-eq.
%abbrev methty`eq-reflexive = eq-reflexive.
%abbrev methty`eq-symmetric = eq-symmetric.
%abbrev methty`eq-transitive = eq-transitive.
#include "map-base.elf"
END_ELF
#undef data
%}%


%%% Exports

%abbrev methmap/0 = map/0.
%abbrev methmap/+ = map/+.
%abbrev methmap = map.
