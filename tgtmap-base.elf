%%% target map : location => set (fields)
%%% here by 'target' we mean field targets in the form of 'o.f'.
%%% $Id: tgtmap-base.elf,v 1.1 2013/05/06 02:29:59 csun Exp csun $
%%% NB: for map-remove.elf, it needs data to have size.


%abbrev set`join = set`union.
%abbrev set`false-implies-join = set`false-implies-union.
%abbrev set`join-respects-eq = set`union-respects-eq.
%abbrev set`join-deterministic = set`union-deterministic.
%abbrev set`join-total = set`union-total.
%abbrev set`join-total* = set`union-total*.
%abbrev set`join-commutative = set`union-commutative.
%abbrev set`join-associative = set`union-associative.
%abbrev set`join-assoc-commutative* = set`union-assoc-commutative*.
%abbrev set`join-assoc-commutative = set`union-assoc-commutative.
%abbrev set`join-left-preserves-leq* = set`union-left-preserves-leq*.
%abbrev set`join-left-preserves-leq = set`union-left-preserves-leq.
%abbrev set`join-implies-leq* = set`union-implies-leq*.
%abbrev set`join-implies-leq = set`union-implies-leq.
%abbrev set`join-preserves-disjoint* = set`union-preserves-disjoint*.
%abbrev set`join-preserves-disjoint-converse = set`union-preserves-disjoint-converse.
%abbrev set`join-is-lub = set`union-is-lub.
%abbrev set`join-preserves-fresh* = set`union-preserves-not-member*.
%abbrev set`disjoint-join-commutative = set`disjoint-union-commutative.
%abbrev set`disjoint-join-cross-comparable = set`disjoint-union-cross-comparable.


%{%
#define data set
#define DATA_NE 1
#define DATA_JOIN_COMMUTATIVE 1
#define DATA_JOIN_ASSOCIATIVE 1
#define DATA_JOIN_DETERMINISTIC 1
#define DATA_JOIN_TOTAL_STAR* 1
#define DATA_JOIN_PRESERVES_LEQ 1
#define DATA_JOIN_IMPLIES_LEQ 1
#define DATA_JOIN_COMMUTATIVE 1
#define DATA_JOIN_IS_LUB 1
BEGIN_ELF
#include "map-base.elf"
#include "map-leq.elf"
#include "map-join.elf"
#include "map-join-extra.elf"
#include "map-domain.elf"
#include "map-deep-disjoint.elf"
END_ELF
#undef data
%}%

%%% Renamings

%abbrev tgtmap = map.
%abbrev tgtmap/0 = map/0.
%abbrev tgtmap/+ = map/+.
%abbrev tgtmap/1 : nat -> map = [N] (map/+ N set/0 map/0).
