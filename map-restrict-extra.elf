%%% extra theorems 
%%% $Id: map-restrict-extra.elf,v 1.1 2013/05/22 20:19:44 csun Exp csun $

not-member-add-preserves-restrict-converse
  : restrict XM S XMP
    -> fresh XM N
    -> set`not-member SP N
    -> set`add SP N S
    -> restrict XM SP XMP
    -> type.

%mode not-member-add-preserves-restrict-converse +R1 +FS +NM +A -R2.

- : not-member-add-preserves-restrict-converse
    restrict/0 fresh/0 N!<S SP+N=S restrict/0.

- : not-member-add-preserves-restrict-converse
    (restrict/out XMx|S=XMP N1!<S N1!<XMx XMx+N1=XM) N2!<XM N2!<SP SP+N2=S
    (restrict/out XMx|SP=XMP N1!<SP N1!<XMx XMx+N1=XM)
    <- fresh-update-implies-leq N1!<XMx XMx+N1=XM XMx<=XM
    <- fresh-respects-geq N2!<XM XMx<=XM N2!<XMx
    <- not-member-add-preserves-restrict-converse
      XMx|S=XMP N2!<XMx N2!<SP SP+N2=S XMx|SP=XMP
    <- set`add-implies-leq SP+N2=S SP<=S
    <- set`not-member-respects-geq N1!<S SP<=S N1!<SP.

not-member-add-preserves-restrict-converse/in
  : restrict XMx S XMPx
    -> set`member S N1
    -> fresh XMx N1
    -> update XMx N1 M XM
    -> update XMPx N1 M XMP
    -> fresh XM N2
    -> set`not-member SP N2
    -> set`add SP N2 S
    -> nat`eq? N1 N2 B
    -> restrict XM SP XMP
    -> type.

%mode not-member-add-preserves-restrict-converse/in +R1 +MB1 +FS1 +U1 +U2 +FS2 +NMB +A +EQ? -R2.

- : not-member-add-preserves-restrict-converse/in
    XMx|S=XMPx N1<-S N1!<XMx XMx+N1+M=XM XMPx+N1+M=XMP N2!<XM N2!<SP SP+N2=S
    nat`eq?/yes XM|SP=XMP
    <- update-implies-lookup XMx+N1+M=XM XM->N1=M
    <- fresh-lookup-not-equal N2!<XM XM->N1=M NE
    <- nat`eq-ne-implies-false nat`eq/ NE V
    <- false-implies-restrict V XM|SP=XMP.

- : not-member-add-preserves-restrict-converse/in
    XMx|S=XMPx N1<-S N1!<XMx XMx+N1+M=XM XMPx+N1+M=XMP N2!<XM N2!<SP SP+N2=S
    (nat`eq?/no N1!=N2) 
    (restrict/in XMx|SP=XMPx N1<-SP N1!<XMx XMx+N1+M=XM XMPx+N1+M=XMP)
    <- set`update-preserves-membership-converse 
      (set`member?/in N1<-S) SP+N2=S N1!=N2 (set`member?/in N1<-SP)
    <- fresh-update-implies-leq N1!<XMx XMx+N1+M=XM XMx<=XM
    <- fresh-respects-geq N2!<XM XMx<=XM N2!<XMx
    <- not-member-add-preserves-restrict-converse
      XMx|S=XMPx N2!<XMx N2!<SP SP+N2=S XMx|SP=XMPx.

- : not-member-add-preserves-restrict-converse
    (restrict/in XMx|S=XMPx N1<-S N1!<XMx XMx+N1+M=XM XMPx+N1+M=XMP)
    N2!<XM N2!<SP SP+N2=S XM|SP=XMP
    <- nat`eq?-total EQ?
    <- not-member-add-preserves-restrict-converse/in
      XMx|S=XMPx N1<-S N1!<XMx XMx+N1+M=XM XMPx+N1+M=XMP 
      N2!<XM N2!<SP SP+N2=S EQ? XM|SP=XMP.

%worlds () 
(not-member-add-preserves-restrict-converse _ _ _ _ _)
(not-member-add-preserves-restrict-converse/in _ _ _ _ _ _ _ _ _ _).

%total (R1 R2) 
(not-member-add-preserves-restrict-converse R1 _ _ _ _)
(not-member-add-preserves-restrict-converse/in R2 _ _ _ _ _ _ _ _ _).
