%%% import from Boyland's library

../library/std.elf
../library/bool.elf
../library/nat.elf
../library/set.elf
../library/natpair.elf
../library/rat.elf
../frac-nesting/frv.elf
../frac-nesting/pheap.elf
../frac-nesting/heap.elf
../frac-nesting/permission.elf
../frac-nesting/canonical.elf
../frac-nesting/nesting.elf
../frac-nesting/booleval.elf
../frac-nesting/models.elf
../frac-nesting/separation.elf
../frac-nesting/implication.elf
../simple-concur/syntax.elf
../simple-concur/prog.elf
../simple-concur/thread.elf
../simple-concur/threads.elf
../simple-concur/normal-contents.elf
../simple-concur/volatile-contents.elf
../simple-concur/normal-fields.elf
../simple-concur/volatile-fields.elf
../simple-concur/mem.elf
../simple-concur/allalloc.elf
../simple-concur/classof.elf
../simple-concur/eval.elf
../simple-concur/ready.elf
../permission-type/environment.elf
../permission-type/progtype.elf
../permission-type/permission-type.elf

%%% sources.cfg

utils.elf                % utility stuff
set-conversion.elf       % conversion between sets
reftype.elf              % reftype = (ty + targets)
fldmap.elf               % field map: field id -> ty
methmap.elf              % method map: method id -> methty
clsmap.elf               % class map: class id -> fldmap
predmap.elf              % predicate map: class id -> class predicate
cxt.elf                  % explicit context: nat -> (object,ty)
subtyping.elf            % subtyping rules
typing.elf               % typing rules
example.elf              % examples for the type system
consistency.elf          % consistencies between various constructs
clsmap2predmap.elf       % rules for converting clsmap to predmap
conversion.elf           % rules for converting to fp
before-read.elf          % helper theorems for proving read
read.elf                 % proofs for reading a field
write.elf                % proofs for writing a field
let.elf                  % proofs for the let construct
call.elf                 % proofs for method call
sub.elf                  % proofs for the sub rule
cond.elf                 % proofs for conditionals, including if
let-more.elf             % more let rules
seq.elf                  % proofs for the seq rule
conversion.thm           % proofs for conversion to FP
