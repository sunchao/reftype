%%% Explicit Type Context
% $Id$


% definition

cxt : type.	%name cxt B.


% equality 

cxt`eq : cxt -> cxt -> type.

cxt`eq/ : cxt`eq B B.


% this vtype is really ugly. better solution?

vtype : type.	%name vtype VT.

vtype/unique : nat -> vtype.

vtype/shared : vtype.


% constructor

cxt/nil : cxt.

cxt/cons : object -> vtype -> ty -> cxt -> cxt.


%{ Well-formed Context:
  All indexes are different, and in monotonically increasing
    order from inner to outer context. 
  !! This definition is so complex! Anyway to make it simpler? }%

cxt-ordered : cxt -> type.

cxt-bounded : cxt -> nat -> type.

cxt-bounded/nil : cxt-bounded cxt/nil _.

cxt-bounded/cons/unique
  : nat`gt N M 
    -> cxt-bounded B M
    -> cxt-bounded (cxt/cons _ (vtype/unique M) _ B) N.

cxt-bounded/cons/shared
  : cxt-bounded B N
    -> cxt-bounded (cxt/cons _ vtype/shared _ B) N.

cxt-ordered/nil : cxt-ordered cxt/nil.

cxt-ordered/cons/unique
  : cxt-bounded B N
    -> cxt-ordered (cxt/cons _ (vtype/unique N) _ B).

cxt-ordered/cons/shared
  : cxt-ordered B
    -> cxt-ordered (cxt/cons _ vtype/shared _ B).


% lookup object

cxt-lookup : cxt -> object -> vtype -> ty -> type.

cxt-lookup/hit : cxt-lookup (cxt/cons O VT T B) O VT T.

cxt-lookup/miss
  : cxt-lookup (cxt/cons O _ _ B) O' VT T
    <- cxt-lookup B O' VT T.


% lookup location

cxt-lookup-index : cxt -> nat -> object -> ty -> type.

cxt-lookup-index/hit
  : cxt-lookup-index (cxt/cons O (vtype/unique N) T _) N O T.

cxt-lookup-index/miss
  : cxt-lookup-index (cxt/cons _ _ _ B) N O T
    <- cxt-lookup-index B N O T.


%%% theorems

false-implies-object-eq 
  : {V:void} {O1:object} {O2}
    object`eq O1 O2
    -> type.

%mode false-implies-object-eq +V +O1 +O2 -E.
%worlds () (false-implies-object-eq _ _ _ _).
%total {} (false-implies-object-eq _ _ _ _).


false-implies-ty-eq
  : {V:void} {T1} {T2}
    ty`eq T1 T2
    -> type.

%mode false-implies-ty-eq +V +T1 +T2 -E.
%worlds () (false-implies-ty-eq _ _ _ _).
%total {} (false-implies-ty-eq _ _ _ _).


false-implies-cxt-lookup-index
  : {V:void}
    cxt-lookup-index B L O T
    -> type.

%mode false-implies-cxt-lookup-index +V -L.
%worlds () (false-implies-cxt-lookup-index _ _).
%total {} (false-implies-cxt-lookup-index _ _).


cxt-bounded-weaken 
  : cxt-bounded B L
    -> nat`gt M L 
    -> cxt-bounded B M
    -> type.

%mode cxt-bounded-weaken +B1 +G1 -B2.

- : cxt-bounded-weaken cxt-bounded/nil _ cxt-bounded/nil.

- : cxt-bounded-weaken (cxt-bounded/cons/unique GT2 B-B) GT 
    (cxt-bounded/cons/unique GT3 B-B)
    <- nat`gt-transitive GT GT2 GT3.

- : cxt-bounded-weaken (cxt-bounded/cons/shared B-B) 
    GT2 (cxt-bounded/cons/shared B-B2)
    <- cxt-bounded-weaken B-B GT2 B-B2.

%worlds () (cxt-bounded-weaken _ _ _).
%total (B) (cxt-bounded-weaken B _ _).


cxt-lookup-bounded-implies-false
  : cxt-lookup-index B L O T
    -> cxt-bounded B L
    -> void
    -> type.

%mode cxt-lookup-bounded-implies-false  +D1 +D2 -V.

- : cxt-lookup-bounded-implies-false 
    cxt-lookup-index/hit (cxt-bounded/cons/unique GT _) V
    <- nat`gt-anti-reflexive GT V.

- : cxt-lookup-bounded-implies-false 
    (cxt-lookup-index/miss B-L) (cxt-bounded/cons/unique GT B-B) V
    <- cxt-bounded-weaken B-B GT B-B2
    <- cxt-lookup-bounded-implies-false B-L B-B2 V.

- : cxt-lookup-bounded-implies-false
    (cxt-lookup-index/miss B-L) (cxt-bounded/cons/shared B-B) V
    <- cxt-lookup-bounded-implies-false B-L B-B V.

%worlds () (cxt-lookup-bounded-implies-false _ _ _).
%total (L) (cxt-lookup-bounded-implies-false L _ _).


cxt-lookup-index-unique/L
  : cxt-lookup-index B1 L1 O1 T1
    -> cxt-lookup-index B2 L2 O2 T2
    -> cxt-bounded B1 N1 
    -> cxt-bounded B2 N2
    -> nat`eq N1 N2
    -> cxt`eq B1 B2
    -> nat`eq L1 L2
    -> object`eq O1 O2
    -> ty`eq T1 T2 
    -> type.

%mode cxt-lookup-index-unique/L +D1 +D2 +D3 +D4 +D5 +D6 +D7 -D8 -D9.

- : cxt-lookup-index-unique/L
    cxt-lookup-index/hit cxt-lookup-index/hit 
    _ _ _ cxt`eq/ nat`eq/ object`eq/ ty`eq/.
    
- : cxt-lookup-index-unique/L
    (cxt-lookup-index/miss B-L1) (cxt-lookup-index/miss B-L2)
    (cxt-bounded/cons/unique N1>M1 B-B1)
    (cxt-bounded/cons/unique N2>M2 B-B2) nat`eq/ cxt`eq/ nat`eq/ OE TE
    <- cxt-lookup-index-unique/L 
      B-L1 B-L2 B-B1 B-B2 nat`eq/ cxt`eq/ nat`eq/ OE TE.

- : cxt-lookup-index-unique/L
    (cxt-lookup-index/miss B-L1) (cxt-lookup-index/miss B-L2)
    (cxt-bounded/cons/shared B-B1) 
    (cxt-bounded/cons/shared B-B2) nat`eq/ cxt`eq/ nat`eq/ OE TE
    <- cxt-lookup-index-unique/L
      B-L1 B-L2 B-B1 B-B2 nat`eq/ cxt`eq/ nat`eq/ OE TE.

- : cxt-lookup-index-unique/L
    (cxt-lookup-index/miss B-L) (cxt-lookup-index/hit)
    (cxt-bounded/cons/unique _ B-B) _ nat`eq/ cxt`eq/ nat`eq/ OE TE
    <- cxt-lookup-bounded-implies-false B-L B-B V
    <- false-implies-object-eq V _ _ OE
    <- false-implies-ty-eq V _ _ TE.

- : cxt-lookup-index-unique/L 
    (cxt-lookup-index/hit) (cxt-lookup-index/miss B-L)
    (cxt-bounded/cons/unique _ B-B) _ nat`eq/ cxt`eq/ nat`eq/ OE TE
    <- cxt-lookup-bounded-implies-false B-L B-B V
    <- false-implies-object-eq V _ _ OE
    <- false-implies-ty-eq V _ _ TE.

%worlds () (cxt-lookup-index-unique/L _ _ _ _ _ _ _ _ _).
%total (L) (cxt-lookup-index-unique/L L _ _ _ _ _ _ _ _).


cxt-lookup-index-unique
  : cxt-lookup-index B1 L1 O1 T1
    -> cxt-lookup-index B2 L2 O2 T2
    -> cxt-ordered B1 
    -> cxt-ordered B2
    -> cxt`eq B1 B2
    -> nat`eq L1 L2
    -> object`eq O1 O2
    -> ty`eq T1 T2 
    -> type.

%mode cxt-lookup-index-unique +D1 +D2 +D3 +D4 +D5 +D6 -D7 -D8.

- : cxt-lookup-index-unique 
    cxt-lookup-index/hit cxt-lookup-index/hit 
    _ _ cxt`eq/ nat`eq/ object`eq/ ty`eq/.
    
- : cxt-lookup-index-unique
    (cxt-lookup-index/miss B-L1) (cxt-lookup-index/miss B-L2)
    (cxt-ordered/cons/unique B-B1)
    (cxt-ordered/cons/unique B-B2) cxt`eq/ nat`eq/ OE TE
    <- cxt-lookup-index-unique/L 
      B-L1 B-L2 B-B1 B-B2 nat`eq/ cxt`eq/ nat`eq/ OE TE.

- : cxt-lookup-index-unique
    (cxt-lookup-index/miss B-L1) (cxt-lookup-index/miss B-L2)
    (cxt-ordered/cons/shared B-O1) (cxt-ordered/cons/shared B-O2)
    cxt`eq/ nat`eq/ OE TE
    <- cxt-lookup-index-unique B-L1 B-L2 B-O1 B-O2 cxt`eq/ nat`eq/ OE TE.
    
- : cxt-lookup-index-unique
    (cxt-lookup-index/miss B-L) (cxt-lookup-index/hit)
    (cxt-ordered/cons/unique B-B) _ cxt`eq/ nat`eq/ OE TE
    <- cxt-lookup-bounded-implies-false B-L B-B V
    <- false-implies-object-eq V _ _ OE
    <- false-implies-ty-eq V _ _ TE.

- : cxt-lookup-index-unique
    (cxt-lookup-index/hit) (cxt-lookup-index/miss B-L)
    (cxt-ordered/cons/unique B-B) _ cxt`eq/ nat`eq/ OE TE
    <- cxt-lookup-bounded-implies-false B-L B-B V
    <- false-implies-object-eq V _ _ OE
    <- false-implies-ty-eq V _ _ TE.

%worlds () (cxt-lookup-index-unique _ _ _ _ _ _ _ _).
%total (L) (cxt-lookup-index-unique L _ _ _ _ _ _ _).
