%%% Type Context
% $Id$


% definition

cxt : type.	%name cxt B.


% equality 

cxt`eq : cxt -> cxt -> type.

cxt`eq/ : cxt`eq B B.


% this vtype is really ugly. better solution?

vtype : type.	%name vtype VT.

vtype/unique : nat -> vtype.

vtype/shared : vtype.


% constructor

cxt/nil : cxt.

cxt/cons : object -> vtype -> ty -> cxt -> cxt.


%{ Well-formed Context:
  1. Each unique reftype should only contain one singleton
    set and an empty tgtmap;
  2. All indexes are different, and in a monotonically increasing
    order from inner to outer context. }%

wf-cxt : cxt -> type.


% lookup object

cxt-lookup : cxt -> object -> vtype -> ty -> type.

cxt-lookup/hit : cxt-lookup (cxt/cons O VT T B) O VT T.

cxt-lookup/miss
  : cxt-lookup (cxt/cons O _ _ B) O' VT T
    <- cxt-lookup B O' VT T.


% lookup location

cxt-lookup-index : cxt -> nat -> object -> ty -> type.

cxt-lookup-index/hit
  : cxt-lookup-index (cxt/cons O (vtype/unique N) T _) N O T.

cxt-lookup-index/miss
  : cxt-lookup-index (cxt/cons _ _ _ B) N O T
    <- cxt-lookup-index B N O T.


%%% theorems

%theorem false-implies-object-eq :
	forall* {O1:object} {O2}
	forall  {F:void}
	exists  {EQ: object`eq O1 O2}
	true.

%worlds (objvar) (false-implies-object-eq _ _).
%total  {} (false-implies-object-eq _ _).


%theorem false-implies-ty-eq :
	forall* {T1} {T2}
	forall  {F:void}
	exists  {EQ: ty`eq T1 T2}
	true.

%worlds (objvar) (false-implies-ty-eq _ _).
%total  {} (false-implies-ty-eq _ _).


%theorem false-implies-cxt-lookup-index :
    forall* {B} {L} {O} {T}
    forall  {F:void}
    exists  {B-L: cxt-lookup-index B L O T}
    true.

%worlds () (false-implies-cxt-lookup-index _ _).
%total  {} (false-implies-cxt-lookup-index _ _).


%theorem cxt-lookup-index-deterministic :
    forall* {B1} {B2} {L1} {L2} {O1} {O2} {T1} {T2}
    forall  {B-L: cxt-lookup-index B1 L1 O1 T1}
            {B-L: cxt-lookup-index B2 L2 O2 T2}
            {EQ: cxt`eq B1 B2} {EQ: nat`eq L1 L2}
    exists  {EQ: object`eq O1 O2} {EQ: ty`eq T1 T2}
    true.
    
- : cxt-lookup-index-deterministic 
    cxt-lookup-index/hit cxt-lookup-index/hit cxt`eq/ nat`eq/ object`eq/ ty`eq/.

- : cxt-lookup-index-deterministic 
    (cxt-lookup-index/miss B-L1) 
    (cxt-lookup-index/miss B-L2) cxt`eq/ nat`eq/ OE TE
    <- cxt-lookup-index-deterministic B-L1 B-L2 cxt`eq/ nat`eq/ OE TE.

- : cxt-lookup-index-deterministic
    (cxt-lookup-index/miss _ NE) 
    cxt-lookup-index/hit cxt`eq/ nat`eq/ OE TE
    <- nat`ne-anti-reflexive NE F
    <- false-implies-object-eq F OE
    <- false-implies-ty-eq F TE.

- : cxt-lookup-index-deterministic
    cxt-lookup-index/hit (cxt-lookup-index/miss/unique _ NE)
    cxt`eq/ nat`eq/ OE TE
    <- nat`ne-anti-reflexive NE F
    <- false-implies-object-eq F OE
    <- false-implies-ty-eq F TE.

%worlds (objvar) (cxt-lookup-index-deterministic _ _ _ _ _ _).
%total (B) (cxt-lookup-index-deterministic B _ _ _ _ _).


