%%% converting *map to permission


% TODO: this is so similar with ty2perm, maybe we can merge them.

annot2perm2 : annot -> (object -> permission) -> type. 

annot2perm2/unique : annot2perm2 annot/unique ([_] empty).

annot2perm2/borrow : annot2perm2 annot/borrow ([_] empty).

annot2perm2/shared
  : annot2perm2 annot/shared
    ([o] unitperm 
      (nonlinear (nested (allperm o) null all))).


ty2perm2 : predmap -> ty -> (object -> permission) -> type.

ty2perm2/null
  : ty2perm2 _ ty/null ([r] (unitperm (nonlinear (objequal r null)))).

ty2perm2/
  : ty2perm2 PM (ty/ NN A C) ([r] PF CP r)
    <- annot2perm2 A AF
    <- nn2perm NN AF PF
    <- predmap`lookup PM C CP.


% make disjunction of objequal facts for object targets.

set2facts : cxt N -> object -> set -> formula -> type.

set2facts/0 : set2facts _ _ set/0 f.

set2facts/+
  : set2facts B O S (disj (objequal O O') G)
    <- set`add S' L S
    <- cxt-lookup B L O' _
    <- set2facts B O S' G.


% converting a efxmap to two set of permissions (