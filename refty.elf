%%% reference type


%%% non-nullness

nonnull		: type.		%name nonnull NN.

nonnull/yes 	: nonnull.

nonnull/may 	: nonnull.


nonnull`eq	: nonnull -> nonnull -> type.

nonnull`eq/	: nonnull`eq NN NN.


%%% annotation

annot		: type.		%name annot A.

annot/unique	: annot.

annot/shared	: annot.

annot/borrow	: annot.	% borrow shall NOT be used on fields


%%% equality

annot`eq	: annot -> annot -> type.

annot`eq/	: annot`eq A A.


%%% annotated type

ty		: type.		%name ty T.

ty/		: nonnull -> annot -> nat -> ty.

ty/null		: ty.



%%% abbreviations

%abbrev nn	= nonnull.
%abbrev nn/yes	= nonnull/yes.
%abbrev nn/may	= nonnull/may.


%%% theorems
