%%% Remove a tgtmap from a efxmap
%%% $Id: efxmap-remove-tgtmap.elf,v 1.1 2013/05/29 16:55:50 csun Exp csun $


efxmap`remove-tgtmap : efxmap -> tgtmap -> efxmap -> efxmap -> type.

efxmap`remove-tgtmap/
  : efxmap2tgtmap XM GM
    -> tgtmap`remove GM GM2 GM1
    -> efxmap`restrict-tgtmap XM GM1 XM1
    -> efxmap`restrict-tgtmap XM GM2 XM2
    -> efxmap`remove-tgtmap XM GM2 XM1 XM2.

efxmap`false-implies-remove-tgtmap
  : void -> efxmap`remove-tgtmap XM GM XM1 XM2 -> type.

%mode +{V} +{XM} +{GM} +{XM1} +{XM2} -{R:efxmap`remove-tgtmap XM GM XM1 XM2}
efxmap`false-implies-remove-tgtmap V R.
%worlds () (efxmap`false-implies-remove-tgtmap V R).
%total { } (efxmap`false-implies-remove-tgtmap V R).


efxmap`remove-tgtmap-respects-eq 
  : efxmap`remove-tgtmap XM GM XM1 XM2
    -> efxmap`eq XM XMP
    -> tgtmap`eq GM GMP
    -> efxmap`eq XM1 XM1P
    -> efxmap`eq XM2 XM2P
    -> efxmap`remove-tgtmap XMP GMP XM1P XM2P
    -> type.

%mode efxmap`remove-tgtmap-respects-eq +D +E1 +E2 +E3 +E4 -O.

- : efxmap`remove-tgtmap-respects-eq 
    R efxmap`eq/ tgtmap`eq/ efxmap`eq/ efxmap`eq/ R.

%worlds () (efxmap`remove-tgtmap-respects-eq _ _ _ _ _ _).
%total  {} (efxmap`remove-tgtmap-respects-eq _ _ _ _ _ _).


efxmap`remove-tgtmap-unique
  : efxmap`remove-tgtmap XM GM XM1 XM2
    -> efxmap`remove-tgtmap XMP GMP XM1P XM2P
    -> efxmap`eq XM XMP
    -> tgtmap`eq GM GMP
    -> efxmap`eq XM1 XM1P
    -> efxmap`eq XM2 XM2P
    -> type.

%mode efxmap`remove-tgtmap-unique +D1 +D2 +E1 +E2 -E1 -E2.

- : efxmap`remove-tgtmap-unique 
    (efxmap`remove-tgtmap/ T R R1 R2)
    (efxmap`remove-tgtmap/ TP RP R1P R2P) XM-E GM2-E XM1-E XM2-E
    <- efxmap2tgtmap-unique T TP XM-E GM-E
    <- tgtmap`remove-deterministic R RP GM-E GM2-E GM1-E
    <- efxmap`restrict-tgtmap-unique R1 R1P XM-E GM1-E XM1-E
    <- efxmap`restrict-tgtmap-unique R2 R2P XM-E GM2-E XM2-E.

%worlds () (efxmap`remove-tgtmap-unique _ _ _ _ _ _).
%total R (efxmap`remove-tgtmap-unique R _ _ _ _ _).


efxmap`remove-tgtmap-total*
  : {XM} {GM} efxmap`wf XM
    -> tgtmap`wf GM 
    -> {XM1} {XM2} efxmap`remove-tgtmap XM GM XM1 XM2 
    -> type.

%mode +{XM} +{GM} +{WF1} +{WF2}
-{XM1} -{XM2} -{R:efxmap`remove-tgtmap XM GM XM1 XM2}
efxmap`remove-tgtmap-total* XM GM WF1 WF2 XM1 XM2 R.

- : efxmap`remove-tgtmap-total* 
    _ _ WF1 WF2  _ _ (efxmap`remove-tgtmap/ XM=>GM RM R1 R2)
    <- efxmap2tgtmap-total XM=>GM
    <- efxmap2tgtmap-preserves-wf WF1 XM=>GM WF1x
    <- tgtmap`remove-total WF1x WF2 _ RM
    <- efxmap`restrict-tgtmap-total R1
    <- efxmap`restrict-tgtmap-total R2.

%worlds () (efxmap`remove-tgtmap-total* _ _ _ _ _ _ _).
%total { } (efxmap`remove-tgtmap-total* _ _ _ _ _ _ _).

%abbrev efxmap`remove-tgtmap-total = efxmap`remove-tgtmap-total* _ _.


efxmap`shift-preserves-remove-tgtmap
  : efxmap`remove-tgtmap XM GM XM1 XM2
    -> efxmap`shift N XM XMP
    -> tgtmap`shift N GM GMP
    -> {XM1P} {XM2P} efxmap`shift N XM1 XM1P
    -> efxmap`shift N XM2 XM2P
    -> efxmap`remove-tgtmap XMP GMP XM1P XM2P
    -> type.
%mode efxmap`shift-preserves-remove-tgtmap +R1 +S1 +S2 -XM1 -XM2 -SH3 -SH4 -R3.

- : efxmap`shift-preserves-remove-tgtmap
    (efxmap`remove-tgtmap/ XM2GM GM/GM2=GM1 XM+GM1=>XM1 XM+GM2=>XM2)
    N<<XM=XMP N<<GM2=GM2P XM1P XM2P N<<XM1=XM1P N<<XM2=XM2P 
    (efxmap`remove-tgtmap/ XMP2GMP GMP/GM2P=GM1P XMP+GM1P=>XM1P XMP+GM2P=>XM2P)
    <- shift-preserves-efxmap2tgtmap XM2GM N<<XM=XMP GMP N<<GM=GMP XMP2GMP
    <- tgtmap`shift-preserves-remove
      GM/GM2=GM1 N<<GM=GMP N<<GM2=GM2P GM1P N<<GM1=GM1P GMP/GM2P=GM1P
    <- efxmap`shift-preserves-restrict-tgtmap
      XM+GM1=>XM1 N<<XM=XMP N<<GM1=GM1P XM1P N<<XM1=XM1P XMP+GM1P=>XM1P
    <- efxmap`shift-preserves-restrict-tgtmap
      XM+GM2=>XM2 N<<XM=XMP N<<GM2=GM2P XM2P N<<XM2=XM2P XMP+GM2P=>XM2P.

%worlds () (efxmap`shift-preserves-remove-tgtmap _ _ _ _ _ _ _ _).
%total { } (efxmap`shift-preserves-remove-tgtmap _ _ _ _ _ _ _ _).


efxmap`remove-tgtmap-implies-leq
  : efxmap`remove-tgtmap XM GM XM1 XM2
    -> efxmap`leq XM1 XM
    -> efxmap`leq XM2 XM
    -> type.
%mode efxmap`remove-tgtmap-implies-leq +XM/GM=XM1+XM2 -XM1<=XM -XM2<=XM.

- : efxmap`remove-tgtmap-implies-leq
    (efxmap`remove-tgtmap/ XM2GM GM/GM2=GM1 XM/GM1=XM1 XM/GM2=XM2)
    XM1<=XM XM2<=XM
    <- efxmap`restrict-tgtmap-implies-leq XM/GM1=XM1 XM1<=XM  
    <- efxmap`restrict-tgtmap-implies-leq XM/GM2=XM2 XM2<=XM.

%worlds () (efxmap`remove-tgtmap-implies-leq _ _ _).
%total { } (efxmap`remove-tgtmap-implies-leq _ _ _).


efxmap`fresh-update-preserves-remove-tgtmap-converse
  : efxmap`remove-tgtmap XM GM XM1 XM2
    -> tgtmap`fresh GMP N
    -> tgtmap`update GMP N S GM
    -> efxmap`fresh XM N
    -> efxmap`remove-tgtmap XM GMP XM1 XM2
    -> type.
%mode efxmap`fresh-update-preserves-remove-tgtmap-converse
+R1 +F1 +U +F2 -R2.


efxmap`fresh-update-preserves-remove-tgtmap-converse/L
  : tgtmap`remove GM GM2 GM1
    -> tgtmap`fresh GM N
    -> tgtmap`fresh GM2P N
    -> tgtmap`update GM2P N S GM2
    -> tgtmap`remove GM GM2P GM1
    -> type.
%mode efxmap`fresh-update-preserves-remove-tgtmap-converse/L 
+R1 +F1 +F2 +U1 -R2.

- : efxmap`fresh-update-preserves-remove-tgtmap-converse/L
    (tgtmap`remove/ WF-GM WF-GM2 WF-GM1 GM1<=GM GM2^GM1 GM2UGM1=GM0 GM<=GM0)
    N!<GM N!<GM2P GM2P+N=GM2
    (tgtmap`remove/ WF-GM WF-GM2P WF-GM1 GM1<=GM GM2P^GM1 GM2PUGM1=GM0P
    GM<=GM0P)
    <- tgtmap`fresh-update-implies-leq N!<GM2P GM2P+N=GM2 GM2P<=GM2
    <- tgtmap`fresh-update-preserves-wf-converse WF-GM2 N!<GM2P GM2P+N=GM2
    WF-GM2P _
    <- tgtmap`deep-disjoint-respects-geq* GM2^GM1 GM2P<=GM2 GM2P^GM1
    <- tgtmap`fresh-update-implies-unit-join N!<GM2P GM2P+N=GM2 GM2PUN=GM2
    <- tgtmap`join-commutative GM2PUN=GM2 NUGM2P=GM2
    <- tgtmap`join-associative NUGM2P=GM2 GM2UGM1=GM0 GM0P GM2PUGM1=GM0P
    NUGM0P=GM0
    <- tgtmap`join-commutative NUGM0P=GM0 GM0PUN=GM0
    <- tgtmap`fresh-respects-geq N!<GM GM1<=GM N!<GM1
    <- tgtmap`join-preserves-fresh* N!<GM2P N!<GM1 GM2PUGM1=GM0P N!<GM0P
    <- tgtmap`fresh-unit-join-implies-update N!<GM0P GM0PUN=GM0 GM0P+N=GM0
    <- tgtmap`fresh-update2-preserves-leq-converse
      GM<=GM0 N!<GM N!<GM0P GM0P+N=GM0 GM<=GM0P.

%worlds () 
(efxmap`fresh-update-preserves-remove-tgtmap-converse/L _ _ _ _ _).
%total {}
(efxmap`fresh-update-preserves-remove-tgtmap-converse/L _ _ _ _ _).

- : efxmap`fresh-update-preserves-remove-tgtmap-converse
    (efxmap`remove-tgtmap/ XM2GM GM/GM2=GM1 XM|GM1=XM1 XM|GM2=XM2)
    N!<GM2P GM2P+N+S=GM2 N!<XM 
    (efxmap`remove-tgtmap/ XM2GM GM/GM2P=GM1 XM|GM1=XM1 XM|GM2P=XM2)
    <- efxmap2tgtmap-preserves-fresh XM2GM N!<XM N!<GM
    <- efxmap`fresh-update-preserves-remove-tgtmap-converse/L
      GM/GM2=GM1 N!<GM N!<GM2P GM2P+N+S=GM2 GM/GM2P=GM1
    <- efxmap`fresh-update-preserves-restrict-tgtmap-converse
      XM|GM2=XM2 N!<XM N!<GM2P GM2P+N+S=GM2 XM|GM2P=XM2.

%worlds () (efxmap`fresh-update-preserves-remove-tgtmap-converse _ _ _ _ _).
%total {} (efxmap`fresh-update-preserves-remove-tgtmap-converse _ _ _ _ _).


efxmap`remove-tgtmap-implies-efxmap2tgtmap
  : efxmap`remove-tgtmap XM GM2 XM1 XM2
    -> tgtmap`leq-efxmap GM2 XM
    -> efxmap2tgtmap XM2 GM2
    -> type.
%mode efxmap`remove-tgtmap-implies-efxmap2tgtmap +R +LE -T.

- : efxmap`remove-tgtmap-implies-efxmap2tgtmap
    (efxmap`remove-tgtmap/ _ _ _ XM|GM2=XM2) GM2<=XM XM2=>GM2
    <- efxmap`restrict-tgtmap-implies-efxmap2tgtmap 
      GM2<=XM XM|GM2=XM2 XM2=>GM2.

%worlds () (efxmap`remove-tgtmap-implies-efxmap2tgtmap _ _ _).
%total { } (efxmap`remove-tgtmap-implies-efxmap2tgtmap _ _ _).


efxmap`remove-tgtmap-implies-join
  : efxmap`remove-tgtmap XM GM2 XM1 XM2
    -> efxmap`join XM1 XM2 XM
    -> type.
%mode efxmap`remove-tgtmap-implies-join +R -J.

%worlds () (efxmap`remove-tgtmap-implies-join _ _).
%trustme %total { } (efxmap`remove-tgtmap-implies-join _ _).


efxmap`remove-tgtmap-implies-deep-disjoint
  : efxmap`remove-tgtmap XM GM XM1 XM2
    -> efxmap`deep-disjoint XM1 XM2
    -> type.
%mode efxmap`remove-tgtmap-implies-deep-disjoint +R -D.

%worlds () (efxmap`remove-tgtmap-implies-deep-disjoint _ _).
%trustme %total { } (efxmap`remove-tgtmap-implies-deep-disjoint _ _).


efxmap`remove-tgtmap-preserves-leq
  : efxmap`leq XM XMP
    -> efxmap`remove-tgtmap XM GM XM1 XM2
    -> efxmap`remove-tgtmap XMP GM XM1P XM2P
    -> efxmap`leq XM1 XM1P 
    -> efxmap`leq XM2 XM2P
    -> type.
%mode efxmap`remove-tgtmap-preserves-leq +LE +R1 +R2 -LE1 -LE2.

%worlds () (efxmap`remove-tgtmap-preserves-leq _ _ _ _ _).
%trustme %total { } (efxmap`remove-tgtmap-preserves-leq _ _ _ _ _).


efxmap`fresh-update2-preserves-remove-tgtmap
  : efxmap`remove-tgtmap XM GM XM1 XM2
    -> efxmap`fresh XM L
    -> tgtmap`fresh GM L
    -> tgtmap`update GM L S GMP
    -> efxmap`remove-tgtmap XM GMP XM1 XM2
    -> type.
%mode efxmap`fresh-update2-preserves-remove-tgtmap +R1 +FS1 +FS2 +U -R2.

%worlds () (efxmap`fresh-update2-preserves-remove-tgtmap _ _ _ _ _).
%trustme %total { } (efxmap`fresh-update2-preserves-remove-tgtmap _ _ _ _ _).



efxmap2tgtmap-right-implies-remove-tgtmap
  : efxmap2tgtmap XM2 GM2
    -> efxmap`deep-disjoint XM1 XM2
    -> efxmap`join XM1 XM2 XM
    -> efxmap`remove-tgtmap XM GM2 XM1 XM2
    -> type.
%mode efxmap2tgtmap-right-implies-remove-tgtmap +XM2GM +DJ +J -R.

%worlds () (efxmap2tgtmap-right-implies-remove-tgtmap _ _ _ _).
%trustme %total XM2=>GM (efxmap2tgtmap-right-implies-remove-tgtmap XM2=>GM _ _ _).


efxmap`remove-tgtmap-associates-join*
  : efxmap`remove-tgtmap XM GM1 XM1 XM2
    -> efxmap`remove-tgtmap XM1 GM2 XM3 XM4
    -> tgtmap`leq-efxmap GM1 XM
    -> tgtmap`leq-efxmap GM2 XM1
    -> tgtmap`join GM1 GM2 GM
    -> {XM5} efxmap`join XM4 XM2 XM5 
    -> efxmap`remove-tgtmap XM GM XM3 XM5
    -> type.

%mode efxmap`remove-tgtmap-associates-join* +R1 +R2 +LE1 +LE2 +J -XM -J2 -R3.

- : efxmap`remove-tgtmap-associates-join* XM/GM1=XM1+XM2
    XM1/GM2=XM3+XM4 GM1<=XM GM2<=XM1 GM1UGM2=GM XM5 XM4UXM2=XM5 XM/GM=XM3+XM5
    <- efxmap`remove-tgtmap-implies-deep-disjoint XM/GM1=XM1+XM2 XM1^XM2
    <- efxmap`remove-tgtmap-implies-join XM/GM1=XM1+XM2 XM1UXM2=XM
    <- efxmap`remove-tgtmap-implies-deep-disjoint XM1/GM2=XM3+XM4 XM3^XM4
    <- efxmap`remove-tgtmap-implies-join XM1/GM2=XM3+XM4 XM3UXM4=XM1
    <- efxmap`remove-tgtmap-implies-efxmap2tgtmap
      XM/GM1=XM1+XM2 GM1<=XM XM2=>GM1
    <- efxmap`remove-tgtmap-implies-efxmap2tgtmap 
      XM1/GM2=XM3+XM4 GM2<=XM1 XM4=>GM2
    <- efxmap`join-associative
      XM3UXM4=XM1 XM1UXM2=XM XM5 XM4UXM2=XM5 XM3UXM5=XM
    <- efxmap`remove-tgtmap-implies-leq XM1/GM2=XM3+XM4 XM3<=XM1 _
    <- efxmap`deep-disjoint-respects-geq* XM1^XM2 XM3<=XM1 XM3^XM2
    <- efxmap`deep-disjoint-symmetric XM3^XM2 XM2^XM3
    <- efxmap`deep-disjoint-symmetric XM3^XM4 XM4^XM3
    <- efxmap`join-preserves-deep-disjoint*
      XM4^XM3 XM2^XM3 XM4UXM2=XM5 XM5^XM3
    <- efxmap`deep-disjoint-symmetric XM5^XM3 XM3^XM5
    <- tgtmap`join-commutative GM1UGM2=GM GM2UGM1=GM
    <- join-preserves-efxmap2tgtmap*
      XM4=>GM2 XM2=>GM1 XM4UXM2=XM5 GM2UGM1=GM XM5=>GM
    <- efxmap2tgtmap-right-implies-remove-tgtmap 
      XM5=>GM XM3^XM5 XM3UXM5=XM XM/GM=XM3+XM5.

%worlds () (efxmap`remove-tgtmap-associates-join* _ _ _ _ _ _ _ _).
%total {} (efxmap`remove-tgtmap-associates-join* _ _ _ _ _ _ _ _).
