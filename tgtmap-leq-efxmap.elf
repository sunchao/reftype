%%% leq relation from tgtmap to efxmap
%%% Most of theorems here can delegate to map`leq
%%% $Id: tgtmap-leq-efxmap.elf,v 1.2 2013/05/29 16:35:29 csun Exp $


tgtmap`leq-efxmap : tgtmap -> efxmap -> type.

tgtmap`leq-efxmap/
  : tgtmap`leq-efxmap GM XM
    <- efxmap2tgtmap XM GMP
    <- tgtmap`leq GM GMP.


% Theorems


tgtmap`false-implies-leq-efxmap : void -> tgtmap`leq-efxmap GM XM -> type.

%mode +{V} +{GM} +{XM} -{LE:tgtmap`leq-efxmap GM XM} 
tgtmap`false-implies-leq-efxmap V LE.

%worlds () (tgtmap`false-implies-leq-efxmap _ _).
%total { } (tgtmap`false-implies-leq-efxmap _ _).


tgtmap`leq-efxmap-respects-eq
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`eq GM GMP
    -> efxmap`eq XM XMP
    -> tgtmap`leq-efxmap GMP XMP
    -> type.

%mode tgtmap`leq-efxmap-respects-eq +LE1 +E1 +E2 -LE2.

- : tgtmap`leq-efxmap-respects-eq
    (tgtmap`leq-efxmap/ GM<=XGM XM2XGM) GM=GMP XM=XMP
    (tgtmap`leq-efxmap/ GM<=XGM1 XM2XGM1)
    <- efxmap2tgtmap-respects-eq XM2XGM XM=XMP tgtmap`eq/ XM2XGM1
    <- tgtmap`leq-respects-eq GM<=XGM GM=GMP tgtmap`eq/ GM<=XGM1.

%worlds () (tgtmap`leq-efxmap-respects-eq _ _ _ _).
%total  {} (tgtmap`leq-efxmap-respects-eq _ _ _ _).


tgtmap`leq-efxmap-right-transitive
  : tgtmap`leq-efxmap GM XM1
    -> efxmap`leq XM1 XM2
    -> tgtmap`leq-efxmap GM XM2
    -> type.

%mode tgtmap`leq-efxmap-right-transitive +LE1 +LE -LE2.

- : tgtmap`leq-efxmap-right-transitive
    (tgtmap`leq-efxmap/ GM<=GM1 XM1=>GM1) XM1<=XM2 
    (tgtmap`leq-efxmap/ GM<=GM2 XM2=>GM2)
    <- efxmap2tgtmap-total XM2=>GM2
    <- efxmap2tgtmap-preserves-leq XM1<=XM2 XM1=>GM1 XM2=>GM2 GM1<=GM2
    <- tgtmap`leq-transitive GM<=GM1 GM1<=GM2 GM<=GM2.

%worlds () (tgtmap`leq-efxmap-right-transitive _ _ _).
%total  {} (tgtmap`leq-efxmap-right-transitive _ _ _).


tgtmap`leq-efxmap-left-transitive
  : tgtmap`leq GM1 GM2 
    -> tgtmap`leq-efxmap GM2 XM
    -> tgtmap`leq-efxmap GM1 XM
    -> type.

%mode tgtmap`leq-efxmap-left-transitive +LE +LE1 -LE2.

- : tgtmap`leq-efxmap-left-transitive 
    GM1<=GM2 (tgtmap`leq-efxmap/ GM2<=GM XM=>GM)
    (tgtmap`leq-efxmap/ GM1<=GM XM=>GM)
    <- tgtmap`leq-transitive GM1<=GM2 GM2<=GM GM1<=GM.

%worlds () (tgtmap`leq-efxmap-left-transitive _ _ _).
%total  {} (tgtmap`leq-efxmap-left-transitive _ _ _).


tgtmap`lookup-respects-leq-efxmap
  : tgtmap`lookup GM N S
    -> tgtmap`leq-efxmap GM XM
    -> {M} efxmap`lookup XM N M
    -> {SP} inner-efxmap`domain M SP
    -> set`leq S SP
    -> type.

%mode tgtmap`lookup-respects-leq-efxmap +L1 +LE1 -M -L2 -SP -DM -SLE.

- : tgtmap`lookup-respects-leq-efxmap
    GM->N=S (tgtmap`leq-efxmap/ GM<=GMP XM=>GMP) M XM->N=M SP DM-M=SP S<=SP
    <- tgtmap`lookup-respects-leq GM->N=S GM<=GMP SP GMP->N=SP S<=SP
    <- efxmap2tgtmap-preserves-lookup-converse XM=>GMP GMP->N=SP M XM->N=M
    DM-M=SP.

%worlds () (tgtmap`lookup-respects-leq-efxmap _ _ _ _ _ _ _).
%total { } (tgtmap`lookup-respects-leq-efxmap _ _ _ _ _ _ _).
    

tgtmap`lookup-respects-leq-efxmap*
  : tgtmap`lookup GM N S
    -> tgtmap`leq-efxmap GM XM
    -> efxmap`lookup XM N M
    -> {SP} inner-efxmap`domain M SP
    -> set`leq S SP
    -> type.

%mode tgtmap`lookup-respects-leq-efxmap* +L1 +LE +L2 -SP -DM -SLE.

- : tgtmap`lookup-respects-leq-efxmap* L1 LE L2 SP DM SLE
    <- tgtmap`lookup-respects-leq-efxmap L1 LE _ L2x _ DMx SLE
    <- efxmap`lookup-unique L2x L2 efxmap`eq/ nat`eq/ E
    <- inner-efxmap`domain-respects-eq DMx E set`eq/ DM.
    
%worlds () (tgtmap`lookup-respects-leq-efxmap* _ _ _ _ _ _).
%total { } (tgtmap`lookup-respects-leq-efxmap* L _ _ _ _ _).


tgtmap`fresh-respects-geq-efxmap
  : efxmap`fresh XM N
    -> tgtmap`leq-efxmap GM XM
    -> tgtmap`fresh GM N
    -> type.

%mode tgtmap`fresh-respects-geq-efxmap +FS1 +LE -FS2.

- : tgtmap`fresh-respects-geq-efxmap
    N!<XM (tgtmap`leq-efxmap/ GM<=GMP XM=>GMP) N!<GM
    <- efxmap2tgtmap-preserves-fresh XM=>GMP N!<XM N!<GMP
    <- tgtmap`fresh-respects-geq N!<GMP GM<=GMP N!<GM.

%worlds () (tgtmap`fresh-respects-geq-efxmap _ _ _).
%total { } (tgtmap`fresh-respects-geq-efxmap _ _ _).


tgtmap`leq-efxmap-implies-size-le
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`size GM N1
    -> efxmap`size XM N2
    -> nat`ge N2 N1
    -> type.

%mode tgtmap`leq-efxmap-implies-size-le +LE1 +SZ1 +SZ2 -GE.

- : tgtmap`leq-efxmap-implies-size-le
    (tgtmap`leq-efxmap/ GM<=GMP XM=>GMP) SZ-GM=N1 SZ-XM=N2 N2>=N1
    <- efxmap2tgtmap-preserves-size XM=>GMP SZ-XM=N2 SZ-GMP=N2
    <- tgtmap`leq-implies-size-le GM<=GMP SZ-GM=N1 SZ-GMP=N2 N2>=N1.

%worlds () (tgtmap`leq-efxmap-implies-size-le _ _ _ _).
%total { } (tgtmap`leq-efxmap-implies-size-le _ _ _ _).


tgtmap`shift-preserves-leq-efxmap*
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`shift N GM GM1
    -> efxmap`shift N XM XM1
    -> tgtmap`leq-efxmap GM1 XM1
    -> type.

%mode tgtmap`shift-preserves-leq-efxmap* +LE1 +SH1 +SH2 -LE2.

- : tgtmap`shift-preserves-leq-efxmap*
    (tgtmap`leq-efxmap/ GM<=GMP XM=>GMP) N<<GM=GM1 N<<XM=XM1 
    (tgtmap`leq-efxmap/ GM1<=GMP1 XM1=>GMP1)
    <- shift-preserves-efxmap2tgtmap
      XM=>GMP N<<XM=XM1 GMP1 N<<GMP=GMP1 XM1=>GMP1
    <- tgtmap`shift-preserves-leq* GM<=GMP N<<GM=GM1 N<<GMP=GMP1 GM1<=GMP1.

%worlds () (tgtmap`shift-preserves-leq-efxmap* _ _ _ _).
%total { } (tgtmap`shift-preserves-leq-efxmap* _ _ _ _).

%abbrev tgtmap`shift-preserves-leq-efxmap 
  = tgtmap`shift-preserves-leq-efxmap*.


tgtmap`shift-preserves-leq-efxmap-converse
  : tgtmap`leq-efxmap GM1 XM1
    -> tgtmap`shift N GM GM1
    -> efxmap`shift N XM XM1
    -> tgtmap`leq-efxmap GM XM
    -> type.

%mode tgtmap`shift-preserves-leq-efxmap-converse +LE1 +SH1 +SH2 -LE2.

- : tgtmap`shift-preserves-leq-efxmap-converse
    (tgtmap`leq-efxmap/ GM1<=GMP1 XM1=>GMP1) N<<GM=GM1 N<<XM=XM1
    (tgtmap`leq-efxmap/ GM<=GMP XM=>GMP)
    <- shift-preserves-efxmap2tgtmap-converse 
      XM1=>GMP1 N<<XM=XM1 GM N<<GMP=GMP1 XM=>GMP
    <- tgtmap`shift-preserves-leq-converse GM1<=GMP1 N<<GM=GM1 N<<GMP=GMP1 GM<=GMP.

%worlds () (tgtmap`shift-preserves-leq-efxmap-converse _ _ _ _).
%total { } (tgtmap`shift-preserves-leq-efxmap-converse _ _ _ _).


tgtmap`update-left-preserves-leq-efxmap*
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`update GM N S GMS
    -> efxmap`update XM N M XMS
    -> inner-efxmap`domain M S
    -> tgtmap`leq-efxmap GMS XMS
    -> type.

%mode tgtmap`update-left-preserves-leq-efxmap* +LE1 +U1 +U2 +D -LE2.

- : tgtmap`update-left-preserves-leq-efxmap*
    (tgtmap`leq-efxmap/ GM<=GMP XM=>GMP) GM+N+S=GMS XM+N+M=XMS DM-M=S
    (tgtmap`leq-efxmap/ GMS<=GMPS XMS=>GMPS)
    <- efxmap2tgtmap-preserves-update
      XM=>GMP XM+N+M=XMS DM-M=S GMPS GMP+N+S=GMPS XMS=>GMPS
    <- set`leq-reflexive _ S<=S
    <- tgtmap`update-preserves-leq* 
      GM<=GMP S<=S GM+N+S=GMS GMP+N+S=GMPS GMS<=GMPS.

%worlds () (tgtmap`update-left-preserves-leq-efxmap* _ _ _ _ _).
%total { } (tgtmap`update-left-preserves-leq-efxmap* _ _ _ _ _).


tgtmap`update-preserves-leq-efxmap
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`update GM N S GMS
    -> efxmap`update XM N M XMS
    -> inner-efxmap`domain M SP
    -> set`leq S SP
    -> tgtmap`leq-efxmap GMS XMS
    -> type.

%mode tgtmap`update-preserves-leq-efxmap +LE1 +U1 +U2 +D +SLE -LE2.

- : tgtmap`update-preserves-leq-efxmap
    (tgtmap`leq-efxmap/ GM<=GMP XM=>GMP) GM+N+S=GMS XM+N+M=XMS DM-M=SP S<=SP
    (tgtmap`leq-efxmap/ GMS<=GMPS XMS=>GMPS)
    <- efxmap2tgtmap-preserves-update
      XM=>GMP XM+N+M=XMS DM-M=SP GMPS GMP+N+S=GMPS XMS=>GMPS
    <- tgtmap`update-preserves-leq* 
      GM<=GMP S<=SP GM+N+S=GMS GMP+N+S=GMPS GMS<=GMPS.

%worlds () (tgtmap`update-preserves-leq-efxmap _ _ _ _ _ _).
%total { } (tgtmap`update-preserves-leq-efxmap _ _ _ _ _ _).


tgtmap`fresh-update-preserves-leq-efxmap-converse
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`fresh GMP N
    -> tgtmap`update GMP N S GM
    -> efxmap`fresh XMP N 
    -> efxmap`update XMP N M XM
    -> tgtmap`leq-efxmap GMP XMP
    -> type.

%mode tgtmap`fresh-update-preserves-leq-efxmap-converse
+LE1 +FS1 +U1 +FS2 +U2 -LE2.

- : tgtmap`fresh-update-preserves-leq-efxmap-converse
    (tgtmap`leq-efxmap/ GM<=GMS XM=>GMS) N!<GMP GMP+N=GM N!<XMP XMP+N=XM 
    (tgtmap`leq-efxmap/ GMP<=GMSx XMP=>GMSx)
    <- tgtmap`update-implies-lookup GMP+N=GM GM->N=_
    <- tgtmap`lookup-respects-leq GM->N=_ GM<=GMS _ GMS->N=_ _
    <- tgtmap`lookup-implies-fresh-update GMS->N=_ GMSx N!<GMSx GMSx+N=GMS
    <- fresh-update-preserves-efxmap2tgtmap-converse
      XM=>GMS N!<XMP XMP+N=XM N!<GMSx GMSx+N=GMS XMP=>GMSx
    <- tgtmap`fresh-update-preserves-leq-converse
      GM<=GMS N!<GMP GMP+N=GM N!<GMSx GMSx+N=GMS GMP<=GMSx _.

%worlds () (tgtmap`fresh-update-preserves-leq-efxmap-converse _ _ _ _ _ _ ).
%total {} (tgtmap`fresh-update-preserves-leq-efxmap-converse _ _ _ _ _ _).


tgtmap`fresh-update2-preserves-leq-efxmap-converse
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`fresh GM N
    -> efxmap`fresh XMP N
    -> efxmap`update XMP N M XM
    -> tgtmap`leq-efxmap GM XMP
    -> type.

%mode tgtmap`fresh-update2-preserves-leq-efxmap-converse 
+LE1 +FS1 +FS2 +U -LE2.

- : tgtmap`fresh-update2-preserves-leq-efxmap-converse 
    (tgtmap`leq-efxmap/ GM<=GMS XM=>GMS) N!<GM N!<XMP XMP+N=XM
    (tgtmap`leq-efxmap/ GM<=GMSx XMP=>GMSx)
    <- efxmap`update-implies-lookup XMP+N=XM XM->N=_
    <- efxmap2tgtmap-preserves-lookup XM=>GMS XM->N=_ _ GMS->N=_ _
    <- tgtmap`lookup-implies-fresh-update GMS->N=_ GMSx N!<GMSx GMSx+N=GMS
    <- fresh-update-preserves-efxmap2tgtmap-converse
      XM=>GMS N!<XMP XMP+N=XM N!<GMSx GMSx+N=GMS XMP=>GMSx
    <- tgtmap`fresh-update2-preserves-leq-converse
      GM<=GMS N!<GM N!<GMSx GMSx+N=GMS GM<=GMSx.

%worlds () (tgtmap`fresh-update2-preserves-leq-efxmap-converse _ _ _ _ _).
%total { } (tgtmap`fresh-update2-preserves-leq-efxmap-converse _ _ _ _ _).


tgtmap`domain-preserves-leq-efxmap
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`domain GM S
    -> {SP} efxmap`domain XM SP
    -> set`leq S SP
    -> type.
%mode tgtmap`domain-preserves-leq-efxmap +LE1 +D1 -SP -D2 -LE2.

- : tgtmap`domain-preserves-leq-efxmap
    (tgtmap`leq-efxmap/ GM<=GMP XM=>GMP) DM-GM=S SP DM-XM=SP S<=SP
    <- tgtmap`domain-preserves-leq GM<=GMP DM-GM=S SP DM-GMP=SP S<=SP
    <- efxmap2tgtmap-preserves-domain-converse XM=>GMP DM-GMP=SP DM-XM=SP.

%worlds () (tgtmap`domain-preserves-leq-efxmap _ _ _ _ _).
%total { } (tgtmap`domain-preserves-leq-efxmap _ _ _ _ _).


tgtmap`domain-preserves-leq-efxmap*
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`domain GM S
    -> efxmap`domain XM SP
    -> set`leq S SP
    -> type.
%mode tgtmap`domain-preserves-leq-efxmap* +LE1 +D1 +D2 -LE2.

- : tgtmap`domain-preserves-leq-efxmap*
    (tgtmap`leq-efxmap/ GM<=GMP XM=>GMP) DM-GM=S DM-XM=SP S<=SP
    <- efxmap2tgtmap-preserves-domain XM=>GMP DM-XM=SP DM-GMP=SP
    <- tgtmap`domain-preserves-leq* GM<=GMP DM-GM=S DM-GMP=SP S<=SP.

%worlds () (tgtmap`domain-preserves-leq-efxmap* _ _ _ _).
%total { } (tgtmap`domain-preserves-leq-efxmap* _ _ _ _).


% sort of like map`leq-reflexive

tgtmap2efxmap-implies-leq-efxmap
  : tgtmap2efxmap GM X XM
    -> tgtmap`leq-efxmap GM XM
    -> type.

%mode tgtmap2efxmap-implies-leq-efxmap +T -LE.

- : tgtmap2efxmap-implies-leq-efxmap GM=>XM 
    (tgtmap`leq-efxmap/ GM<=GM XM=>GM)
    <- tgtmap2efxmap-implies-efxmap2tgtmap GM=>XM XM=>GM
    <- tgtmap`leq-reflexive _ GM<=GM.

%worlds () (tgtmap2efxmap-implies-leq-efxmap _ _).
%total  {} (tgtmap2efxmap-implies-leq-efxmap _ _).