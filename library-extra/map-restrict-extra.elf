%%% extra theorems 
%%% $Id: map-restrict-extra.elf,v 1.5 2013/05/29 21:24:52 csun Exp $


%theorem not-member-add-preserves-restrict-converse :
  forall* {M} {S} {MP} {N} {SP} 
  forall {R: restrict M S MP}
    {F: fresh M N} {NM: set`not-member SP N}
    {A: set`add SP N S}
  exists {R: restrict M SP MP}
  true.

- : not-member-add-preserves-restrict-converse
    restrict/0 fresh/0 N!<S SP+N=S restrict/0.

- : not-member-add-preserves-restrict-converse
    (restrict/out Mx|S=MP N1!<S N1!<Mx Mx+N1=M) N2!<M N2!<SP SP+N2=S
    (restrict/out Mx|SP=MP N1!<SP N1!<Mx Mx+N1=M)
    <- fresh-update-implies-leq N1!<Mx Mx+N1=M Mx<=M
    <- fresh-respects-geq N2!<M Mx<=M N2!<Mx
    <- not-member-add-preserves-restrict-converse
      Mx|S=MP N2!<Mx N2!<SP SP+N2=S Mx|SP=MP
    <- set`add-implies-leq SP+N2=S SP<=S
    <- set`not-member-respects-geq N1!<S SP<=S N1!<SP.


%theorem not-member-add-preserves-restrict-converse/in :
  forall* {Mx} {MPx} {S} {SP} {N1} {N2} {D} {M} {MP} {B}
  forall {R: restrict Mx S MPx} {MB: set`member S N1}
    {F: fresh Mx N1} {U: update Mx N1 D M}
    {U: update MPx N1 D MP} {F: fresh M N2}
    {NM: set`not-member SP N2} {A: set`add SP N2 S}
    {E?: nat`eq? N1 N2 B}
  exists {R: restrict M SP MP}
  true.

- : not-member-add-preserves-restrict-converse/in
    Mx|S=MPx N1<-S N1!<Mx Mx+N1+M=M MPx+N1+M=MP N2!<M N2!<SP SP+N2=S
    nat`eq?/yes M|SP=MP
    <- update-implies-lookup Mx+N1+M=M M->N1=M
    <- fresh-lookup-not-equal N2!<M M->N1=M NE
    <- nat`eq-ne-implies-false nat`eq/ NE V
    <- false-implies-restrict V M|SP=MP.

- : not-member-add-preserves-restrict-converse/in
    Mx|S=MPx N1<-S N1!<Mx Mx+N1+M=M MPx+N1+M=MP N2!<M N2!<SP SP+N2=S
    (nat`eq?/no N1!=N2) 
    (restrict/in Mx|SP=MPx N1<-SP N1!<Mx Mx+N1+M=M MPx+N1+M=MP)
    <- set`update-preserves-membership-converse 
      (set`member?/in N1<-S) SP+N2=S N1!=N2 (set`member?/in N1<-SP)
    <- fresh-update-implies-leq N1!<Mx Mx+N1+M=M Mx<=M
    <- fresh-respects-geq N2!<M Mx<=M N2!<Mx
    <- not-member-add-preserves-restrict-converse
      Mx|S=MPx N2!<Mx N2!<SP SP+N2=S Mx|SP=MPx.

- : not-member-add-preserves-restrict-converse
    (restrict/in Mx|S=MPx N1<-S N1!<Mx Mx+N1+M=M MPx+N1+M=MP)
    N2!<M N2!<SP SP+N2=S M|SP=MP
    <- nat`eq?-total EQ?
    <- not-member-add-preserves-restrict-converse/in
      Mx|S=MPx N1<-S N1!<Mx Mx+N1+M=M MPx+N1+M=MP 
      N2!<M N2!<SP SP+N2=S EQ? M|SP=MP.

%worlds () (not-member-add-preserves-restrict-converse _ _ _ _ _) (not-member-add-preserves-restrict-converse/in _ _ _ _ _ _ _ _ _ _).
%total (R1 R2) (not-member-add-preserves-restrict-converse R1 _ _ _ _) (not-member-add-preserves-restrict-converse/in R2 _ _ _ _ _ _ _ _ _).




