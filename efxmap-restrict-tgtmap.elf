% Restrict efxmap on a tgtmap
% $Id$

efxmap`restrict-tgtmap : efxmap -> tgtmap -> efxmap -> type.

efxmap`restrict-tgtmap/
  : efxmap`restrict-tgtmap XM GM XMS
    <- tgtmap`domain GM S
    <- efxmap`restrict XM S XMP
    <- efxmap`trans XMP GM XMS.



efxmap`false-implies-restrict-tgtmap
  : void -> efxmap`restrict-tgtmap XM GM XMP -> type.

%mode +{V} +{XM} +{GM} -{XMP} -{R:efxmap`restrict-tgtmap XM GM XMP}
efxmap`false-implies-restrict-tgtmap V R.

%worlds () (efxmap`false-implies-restrict-tgtmap _ _).
%total { } (efxmap`false-implies-restrict-tgtmap _ _).


efxmap`restrict-tgtmap-unique
  : efxmap`restrict-tgtmap XM1 GM1 XMP1
    -> efxmap`restrict-tgtmap XM2 GM2 XMP2
    -> efxmap`eq XM1 XM2
    -> tgtmap`eq GM1 GM2
    -> efxmap`eq XMP1 XMP2
    -> type.

%mode efxmap`restrict-tgtmap-unique +R1 +R2 +E1 +E2 -E3.

- : efxmap`restrict-tgtmap-unique 
    (efxmap`restrict-tgtmap/ XMS1=>XMP1 XM1|S1=XMS1 DM-GM1=S1)
    (efxmap`restrict-tgtmap/ XMS2=>XMP2 XM2|S2=XMS2 DM-GM2=S2)
    XM1=XM2 GM1=GM2 XMP1=XMP2
    <- tgtmap`domain-unique DM-GM1=S1 DM-GM2=S2 GM1=GM2 S1=S2
    <- efxmap`restrict-unique XM1|S1=XMS1 XM2|S2=XMS2 XM1=XM2 S1=S2 XMS1=XMS2
    <- efxmap`trans-unique XMS1=>XMP1 XMS2=>XMP2 XMS1=XMS2 GM1=GM2 XMP1=XMP2.

%worlds () (efxmap`restrict-tgtmap-unique _ _ _ _ _).
%total R (efxmap`restrict-tgtmap-unique R _ _ _ _).


tgtmap`restrict-preserves-leq-efxmap/L
  : {N} efxmap`size XM N
    -> tgtmap`leq-efxmap GM XM
    -> tgtmap`domain GM S
    -> efxmap`restrict XM S XMP
    -> tgtmap`leq-efxmap GM XMP
    -> type.

%mode tgtmap`restrict-preserves-leq-efxmap/L +N +SZ +LE1 +DM +R -LE2.

- : tgtmap`restrict-preserves-leq-efxmap/L _ _
    _ tgtmap`domain/0 R (tgtmap`leq-efxmap/ tgtmap`leq/0 T)
    <- efxmap2tgtmap-total T.

- : tgtmap`restrict-preserves-leq-efxmap/L (s N) SZ GM<=XM DM-GM=S
    (efxmap`restrict/in XMx|S=XMPx N<-S N!<XMx XMx+N+M=XM XMPx+N+M=XMP) GM<=XMP
    <- tgtmap`domain-preserves-lookup-converse N<-S DM-GM=S GS GM->N=GS
    <- tgtmap`lookup-implies-fresh-update GM->N=GS GMx N!<GMx GMx+N+GS=GM
    <- set`member-implies-not-member-add N<-S SP N!<SP SP+N=S
    <- tgtmap`domain-commute-fresh-update-converse
      DM-GM=S N!<GMx GMx+N+GS=GM N!<SP SP+N=S DM-GMx=SP
    <- tgtmap`fresh-update-preserves-leq-efxmap-converse 
      GM<=XM N!<GMx GMx+N+GS=GM N!<XMx XMx+N+M=XM GMx<=XMx
    <- efxmap`update-implies-lookup XMx+N+M=XM XM->N=M
    <- tgtmap`lookup-respects-leq-efxmap* GM->N=GS GM<=XM XM->N=M GSx DM-M=GSx GS<=GSx
    <- efxmap`not-member-add-preserves-restrict-converse
      XMx|S=XMPx N!<XMx N!<SP SP+N=S XMx|SP=XMPx
    <- efxmap`fresh-update-increases-size-converse SZ N!<XMx XMx+N+M=XM SZx
    <- tgtmap`restrict-preserves-leq-efxmap/L N SZx
      GMx<=XMx DM-GMx=SP XMx|SP=XMPx GMx<=XMPx
    <- tgtmap`update-preserves-leq-efxmap
      GMx<=XMPx GMx+N+GS=GM XMPx+N+M=XMP DM-M=GSx GS<=GSx GM<=XMP.

- : tgtmap`restrict-preserves-leq-efxmap/L (s N) SZ GM<=XM DM-GM=S
    (efxmap`restrict/out XMx|S=XMP N!<S N!<XMx XMx+N+M=XM) GM<=XMP
    <- tgtmap`domain-preserves-fresh-converse N!<S DM-GM=S N!<GM
    <- tgtmap`fresh-update2-preserves-leq-efxmap-converse
      GM<=XM N!<GM N!<XMx XMx+N+M=XM GM<=XMx
    <- efxmap`fresh-update-increases-size-converse SZ N!<XMx XMx+N+M=XM SZx
    <- tgtmap`restrict-preserves-leq-efxmap/L N SZx GM<=XMx DM-GM=S XMx|S=XMP GM<=XMP.

%worlds () (tgtmap`restrict-preserves-leq-efxmap/L _ _ _ _ _ _).
%total N (tgtmap`restrict-preserves-leq-efxmap/L N _ _ _ _ _).


tgtmap`restrict-preserves-leq-efxmap
  : tgtmap`leq-efxmap GM XM
    -> tgtmap`domain GM S
    -> efxmap`restrict XM S XMP
    -> tgtmap`leq-efxmap GM XMP
    -> type.

%mode tgtmap`restrict-preserves-leq-efxmap +LE1 +DM +R -LE2.

- : tgtmap`restrict-preserves-leq-efxmap LE1 DM R LE2
    <- efxmap`size-total SZ
    <- tgtmap`restrict-preserves-leq-efxmap/L _ SZ LE1 DM R LE2.

%worlds () (tgtmap`restrict-preserves-leq-efxmap _ _ _ _).
%total { } (tgtmap`restrict-preserves-leq-efxmap _ _ _ _).
